<?phpclass Recording_model extends MY_Model {	protected $_table = 'qm.recordings';	protected $primary_key = 'record_id';	function get_base_on_user_id($userid)	{		$this->db->join('qm_form', 'recordings.qm_id = qm_form.qm_id');		$this->db->where('userid', $userid);		return $this;	}	function join_user_current_week($tenant_id,$userid)	{		$this->load->database('reportcallcenter', TRUE);		$this->load->database('callcenter', TRUE);		$this->db->join('reportcallcenter.callcontactsdetails', 'recordings.unique_id = callcontactsdetails.callid');		$this->db->join('callcenter.users', 'recordings.userid = users.userid');		$this->db->order_by('reportcallcenter.callcontactsdetails.connecttime', 'desc','qm.users.username', 'asc');		//$this->db->where('qm.recordings.supervisor_id', $userid);		$this->db->where('recordings.tenantid', $tenant_id);		$this->db->where('recordings.recording_type', 1);		return $this;	}	function preview_recording($tenant_id,$date,$userid)	{		$this->load->database('reportcallcenter', TRUE);		$this->load->database('callcenter', TRUE);		$this->db->join('reportcallcenter.callcontactsdetails', 'recordings.unique_id = callcontactsdetails.callid');		$this->db->join('callcenter.users', 'recordings.userid = users.userid');		//$this->db->where('recordings.supervisor_id', $userid);		$this->db->where('recordings.tenantid', $tenant_id);		$this->db->where('date(callcontactsdetails.connecttime)', $date);		$this->db->where('recordings.recording_type', 1);		$this->db->order_by('reportcallcenter.callcontactsdetails.connecttime', 'desc');		return $this;	}	function current_week_complete($tenant_id,$start_date,$end_date,$userid)	{		$this->load->database('reportcallcenter', TRUE);		$this->load->database('callcenter', TRUE);		$this->db->join('reportcallcenter.callcontactsdetails', 'recordings.unique_id = callcontactsdetails.callid');		$this->db->join('callcenter.users', 'recordings.userid = users.userid');		$this->db->where('recordings.tenantid', $tenant_id);		$this->db->where('date(callcontactsdetails.connecttime) >=  ', $start_date);		$this->db->where('date(callcontactsdetails.connecttime) <=  ', $end_date);		$this->db->where('recordings.status', 4);		$this->db->where('recordings.recording_type', 1);		$this->db->order_by('users.username', 'asc');		$this->db->order_by('reportcallcenter.callcontactsdetails.connecttime', 'desc');		return $this;	}	function current_week_pending($tenant_id,$start_date,$end_date,$userid)	{		$this->load->database('reportcallcenter', TRUE);		$this->load->database('callcenter', TRUE);		$this->db->join('reportcallcenter.callcontactsdetails', 'recordings.unique_id = callcontactsdetails.callid');		$this->db->join('callcenter.users', 'recordings.userid = users.userid');		$this->db->where('recordings.tenantid', $tenant_id);		$this->db->where('date(callcontactsdetails.connecttime) >=  ', $start_date);		$this->db->where('date(callcontactsdetails.connecttime) <=  ', $end_date);		$this->db->where('recordings.status !=', 1);		$this->db->where('recordings.status !=', 2);		$this->db->where('recordings.status !=', 4);		$this->db->where('recordings.recording_type', 1);		$this->db->order_by('users.username', 'asc');		$this->db->order_by('reportcallcenter.callcontactsdetails.connecttime', 'desc');		return $this;	}	function current_week_new($tenant_id,$start_date,$end_date,$userid)	{		$this->load->database('reportcallcenter', TRUE);		$this->load->database('callcenter', TRUE);		$this->db->join('reportcallcenter.callcontactsdetails', 'recordings.unique_id = callcontactsdetails.callid');		$this->db->join('callcenter.users', 'recordings.userid = users.userid');		$this->db->where('recordings.tenantid', $tenant_id);		$this->db->where('date(callcontactsdetails.connecttime) >=  ', $start_date);		$this->db->where('date(callcontactsdetails.connecttime) <=  ', $end_date);		$this->db->where('recordings.status', 1);		$this->db->where('recordings.recording_type', 1);		$this->db->order_by('users.username', 'asc');		$this->db->order_by('reportcallcenter.callcontactsdetails.connecttime', 'desc');		return $this;	}	function current_week_expired($tenant_id,$start_date,$end_date,$userid)	{		$this->load->database('reportcallcenter', TRUE);		$this->load->database('callcenter', TRUE);		$this->db->join('reportcallcenter.callcontactsdetails', 'recordings.unique_id = callcontactsdetails.callid');		$this->db->join('callcenter.users', 'recordings.userid = users.userid');		$this->db->where('recordings.tenantid', $tenant_id);		$this->db->where('date(callcontactsdetails.connecttime) >=  ', $start_date);		$this->db->where('date(callcontactsdetails.connecttime) <=  ', $end_date);		$this->db->where('recordings.status', 2);		$this->db->where('recordings.recording_type', 1);		$this->db->order_by('users.username', 'asc');		$this->db->order_by('reportcallcenter.callcontactsdetails.connecttime', 'desc');		return $this;	}	function search_recording($tenant_id,$agent_name,$start_date,$end_date,$status,$userid,$check_old_date,$recover)	{		$this->load->database('reportcallcenter', TRUE);		$this->load->database('callcenter', TRUE);		$this->db->join('reportcallcenter.callcontactsdetails', 'recordings.unique_id = reportcallcenter.callcontactsdetails.callid');		$this->db->join('callcenter.users', 'recordings.userid = users.userid');		if(isset($per_page) && isset($current_page) ){			$this->db->limit($per_page, $current_page);		}		if(!empty($agent_name)){			$this->db->like('users.username', $agent_name);		}		if(!empty($start_date)){			$this->db->where('date(callcontactsdetails.connecttime) >=  ', $start_date);		}		if(!empty($end_date)){			$this->db->where('date(callcontactsdetails.connecttime) <=  ', $end_date);		}		if(!empty($status)){			if($status == 3){				$this->db->where('recordings.status', 3);				$this->db->where('recordings.status', 5);			}else{				$this->db->where('recordings.status', $status);			}		}		if(!empty($recover)){			$this->db->where('recordings.recover', $recover);		}		//$this->db->where('date(callcontactsdetails.connecttime) <  ', $check_old_date);		//$this->db->where('recordings.recording_type', 0);		$this->db->where('recordings.recording_type', 1);		$this->db->where('recordings.tenantid', $tenant_id);		$this->db->order_by('users.username', 'asc');		$this->db->order_by('callcontactsdetails.connecttime', 'desc');		//$this->db->limit(100);		return $this;	}	function search_recording2($tenant_id,$agent_name,$start_date,$end_date,$status,$userid,$check_old_date,$recover)	{		$this->load->database('reportcallcenter', TRUE);		$this->load->database('callcenter', TRUE);		$this->db->join('reportcallcenter.callcontactsdetails', 'recordings.unique_id = reportcallcenter.callcontactsdetails.callid');		$this->db->join('callcenter.users', 'recordings.userid = users.userid');		if (isset($per_page) && isset($current_page) ){			$this->db->limit($per_page, $current_page);		}		if(!empty($agent_name)){			$this->db->like('users.username', $agent_name);		}		if(!empty($start_date)){			$this->db->where('date(callcontactsdetails.connecttime) >=  ', $start_date);		}		if(!empty($end_date)){			$this->db->where('date(callcontactsdetails.connecttime) <=  ', $end_date);		}		if(!empty($status)){			if($status == 3){				//$this->db->where('recordings.status', 3);				$this->db->where('recordings.status !=', 1);				$this->db->where('recordings.status !=', 2);				$this->db->where('recordings.status !=', 4);			}else{				$this->db->where('recordings.status', $status);			}		}		if(!empty($recover)){			$this->db->where('recordings.recover', $recover);		}		$this->db->where('recordings.recording_type', 1);		$this->db->where('date(callcontactsdetails.connecttime) <  ', $check_old_date);		$this->db->where('recordings.tenantid', $tenant_id);		$this->db->order_by('callcenter.users.username', 'asc');		$this->db->order_by('reportcallcenter.callcontactsdetails.connecttime', 'desc');		//$this->db->limit(100);		return $this;	}	function older_week_complete($tenant_id,$start_date,$userid)	{		$this->load->database('reportcallcenter', TRUE);		$this->load->database('callcenter', TRUE);		$this->db->join('reportcallcenter.callcontactsdetails', 'recordings.unique_id = callcontactsdetails.callid');		$this->db->join('callcenter.users', 'recordings.userid = users.userid');		//$this->db->where('qm.recordings.supervisor_id', $userid);		$this->db->where('recordings.tenantid', $tenant_id);		$this->db->where('date(callcontactsdetails.connecttime) <=  ', $start_date);		$this->db->where('qm.recordings.status', 4);		$this->db->where('recordings.recording_type', 1);		$this->db->order_by('callcenter.users.username', 'asc');		$this->db->order_by('reportcallcenter.callcontactsdetails.connecttime', 'desc');		return $this;	}	function older_week_pending($tenant_id,$start_date,$userid)	{		$this->load->database('reportcallcenter', TRUE);		$this->load->database('callcenter', TRUE);		$this->db->join('reportcallcenter.callcontactsdetails', 'recordings.unique_id = callcontactsdetails.callid');		$this->db->join('callcenter.users', 'recordings.userid = users.userid');		//$this->db->where('qm.recordings.supervisor_id', $userid);		$this->db->where('recordings.tenantid', $tenant_id);		$this->db->where('date(callcontactsdetails.connecttime) <=  ', $start_date);		$this->db->where('qm.recordings.status !=', 1);		$this->db->where('qm.recordings.status !=', 2);		$this->db->where('qm.recordings.status !=', 4);		$this->db->where('recordings.recording_type', 1);		$this->db->order_by('callcenter.users.username', 'asc');		$this->db->order_by('reportcallcenter.callcontactsdetails.connecttime', 'desc');		return $this;	}	function older_week_new($tenant_id,$start_date,$userid)	{		$this->load->database('reportcallcenter', TRUE);		$this->load->database('callcenter', TRUE);		$this->db->join('reportcallcenter.callcontactsdetails', 'recordings.unique_id = callcontactsdetails.callid');		$this->db->join('callcenter.users', 'recordings.userid = users.userid');	//	$this->db->where('qm.recordings.supervisor_id', $userid);		$this->db->where('recordings.tenantid', $tenant_id);		$this->db->where('date(callcontactsdetails.connecttime) <=  ', $start_date);		$this->db->where('qm.recordings.status', 1);		$this->db->where('recordings.recording_type', 1);		$this->db->order_by('callcenter.users.username', 'asc');		$this->db->order_by('reportcallcenter.callcontactsdetails.connecttime', 'desc');		return $this;	}	function older_week_expired($tenant_id,$start_date,$userid)	{		$this->load->database('reportcallcenter', TRUE);		$this->load->database('callcenter', TRUE);		$this->db->join('reportcallcenter.callcontactsdetails', 'recordings.unique_id = callcontactsdetails.callid');		$this->db->join('callcenter.users', 'recordings.userid = users.userid');		//$this->db->where('qm.recordings.supervisor_id', $userid);		$this->db->where('recordings.tenantid', $tenant_id);		$this->db->where('date(callcontactsdetails.connecttime) <=  ', $start_date);		$this->db->where('recordings.status', 2);		$this->db->where('recordings.recording_type', 1);		$this->db->order_by('callcenter.users.username', 'asc');		$this->db->order_by('reportcallcenter.callcontactsdetails.connecttime', 'desc');		return $this;	}	function get_older_news_status_count($tenant_id, $date)	{		$this->load->database('reportcallcenter', TRUE);		$this->db->join('callcontactsdetails', 'recordings.unique_id = callcontactsdetails.callid');		$this->db->where('recordings.recording_type', 1);		$this->db->where('recordings.tenantid', $tenant_id);		$this->db->where('date(callcontactsdetails.connecttime) <  ', $date);		return $this;	}	function get_current_week_status_count($tenant_id, $date1,$date2)	{		$this->load->database('reportcallcenter', TRUE);		$this->db->join('callcontactsdetails', 'recordings.unique_id = callcontactsdetails.callid');		$this->db->where('date(callcontactsdetails.connecttime) >=  ', $date1);		$this->db->where('date(callcontactsdetails.connecttime) <=  ', $date2);		$this->db->where('recordings.recording_type',1);		$this->db->where('recordings.tenantid', $tenant_id);		return $this;	}	function join_submitted_recording($record_id)	{		$this->load->database('callcenter', TRUE);		$this->db->join('qm.rate_info', 'recordings.record_id = rate_info.record_id');		$this->db->join('qm.rate_info_criteria', 'recordings.record_id = rate_info_criteria.record_id');		$this->db->join('qm.rate_info_question', 'rate_info_criteria.criteria_id = rate_info_question.criteria_id');		$this->db->join('qm.question', 'rate_info_question.question_id = question.question_id');		$this->db->join('callcenter.users', 'recordings.userid = users.userid');		$this->db->join('qm.recordings_and_qm', 'recordings.record_id = recordings_and_qm.record_id');		$this->db->join('qm.qm_form', 'recordings_and_qm.qm_id = qm_form.qm_id');		$this->db->where('qm.recordings_and_qm.record_id', $record_id);		$this->db->where('qm.recordings.record_id', $record_id);		$this->db->where('qm.rate_info.record_id', $record_id);		$this->db->where('qm.rate_info_criteria.record_id', $record_id);		$this->db->where('qm.rate_info_question.record_id', $record_id);		$this->db->where('recordings.recording_type', 1);		$this->db->order_by('qm.rate_info_criteria.criteria_title', 'asc');		return $this;	}}?>